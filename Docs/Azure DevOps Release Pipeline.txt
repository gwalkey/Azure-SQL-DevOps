Release Pipeline with Keyvault
------------------------------
1) Releases - +New - New Release Pipeline - 
2) Start with an Empty Job
3) Artifacts - +Add
4) Source Type - Build 
	a) Project - SQL Server
	b) Source (build pipeline) - dropdown - select build pipeline - "SQL Saturday Build"
	c) Default Version - pick a Build - latest
	d) Source Alias - filled in when you select the build
	e) Click Add
6) Stages - "Click on 1 job, 0 tasks"
	a) Add a Stage Name - "Production"
7) Click on Agent Job
	a) Display Name
	b) Agent Pool - Select a Pool Type - Hosted (Azure) or Private (On-Prem) - Pick Azure Pipelines
	c) Agent spec - Windows latest - linux does not have sqlpackage
	d) Demands - +Add - sqlpackage - exists
8) Agent Job  - Click + to and Add one Task
	a) Azure SQL Database Deployment
9)	KeyVault Setup
	a) Goto Library - +Variable Group
	b) Variable Group Name, Description
	c) Enable slider "Link Secrets from an Azure KeyVault"
	d) Select Azure Subscription and KeyVault Name
	e) Variable - +Add - select your KeyVault Secret
	f) Save the Variable Group
	g) Release Variable - Link Variable Group - Scope - Release - Link
9) Edit Azure SQL Database Deployment
	a) Display Name - SQL Saturday Release
	b) Azure Service Connection Type - Azure Resource Manager
		Segway into DevOps Project Service Connection into your Azure Subscription that hosts your SQL Server
	c) Azure Subscription - Select Your Sub
	d) Authentication Type - SQL Server Auth
	e) Azure SQL Server - insyncvasql.database.windows.net
	f) Database - AW_LT
	g) Login - sqladmin
	h) Password - use the KeyVault secret as $(sqluserpassword)
	i) Deploy Type - DACPAC
	j) Action - Publish
	k) DacPac - use browse ellipsis to find your .DACPAC file in bin/release
	l) Publish Profile - Blank
	m) Additional SqlPackage.exe Arguments - 
		i) /p:BlockOnPossibleDataLoss=false
10) Back to Pipeline to set Release Triggers
	a) Enable CI/CD - "Continuous deployment trigger"
	b) Build Branch Triggers - typically release from Main 